#!/usr/bin/env python3
# coding: utf-8

import copy
import os

from analysisModule.analyzer import Analyzer
from analysisModule.codeQueryCollection import CodeQueryCollection
from analysisModule.codeQueryReader import CodeQueryReader
from analysisModule.repository import Repository
from initializerModule.dbControl import DBControl
from initializerModule.mongoDB import MongoDB
from initializerModule.parser import Parser
from searchModule.api import API
from searchModule.searchQueryConsumerFactory import SearchQueryConsumerFactory
from searchModule.searchQueryFactory import SearchQueryFactory

inputDict = Parser.parseInput()

currentDir = os.getcwd()
dataDir = os.path.join(currentDir, "data")

if not os.path.isdir(dataDir):
    os.mkdir(dataDir)

# DBControl.startContainer(dataDir)

db = MongoDB(inputDict["dbcollection"])

s = SearchQueryFactory.getSearchQuery(inputDict["api"], inputDict["searchconfig"])
c = SearchQueryConsumerFactory.getConsumer(inputDict["api"], s, db)

# check if list of repositories is already given or still needs to be determined
if inputDict["repolist"]:
    # read repositories directly from file
    with open(inputDict["repolist"], "r") as fh:
        repo_urls = fh.readlines()
        repo_urls = [x.strip() for x in repo_urls]
        c.get_repos(repo_urls)
else:
    c.startSearch()

c.reportRepos()

queryCollection = CodeQueryReader.readCodeQueriesFromFile(inputDict["codequeries"])

repoAnalyzer = Analyzer(queryCollection, db)
repoAnalyzer.beginAnalysis()

# DBControl.stopContainer()
